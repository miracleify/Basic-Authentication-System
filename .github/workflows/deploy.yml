name: Deployment to EC2 server

on:
  push:
    branches:
      - develop
      - master  # Ensuring master branch triggers deployment

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY }}:${{ github.sha }}

  deploy_to_staging:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        if: github.ref == 'refs/heads/develop'
        with:
          host: ${{ secrets.SSH_STAGING_HOST }}
          username: ${{ secrets.ALT_SSH_USER }}
          key: ${{ secrets.SSH_STAGING_SECRET }}
          script: |
            set -ex
            export IMAGE_TAG=${{ github.sha }}
            # Changed directory to match your project folder on the EC2 instance
            cd ~/Basic-Authentication-System
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REGISTRY }}
            docker pull ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY }}:${IMAGE_TAG}
            docker compose down --remove-orphans
            docker compose up -d --force-recreate
            docker image prune -af
